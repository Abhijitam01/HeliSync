Core Functionality
Postgres Database Integration:

Users should be able to sign up and provide their Postgres database credentials.

The platform should allow users to specify what they want to index on the Solana blockchain.

Customizable Data Indexing:

Users can choose from predefined indexing categories, such as:

Currently available bids on an NFT

Current prices of an NFT

Currently available tokens to borrow

The current price of a specific token on various platforms

The platform should automatically start filling the userâ€™s Postgres database with the selected data.

Automated Blockchain Data Retrieval:

Uses Helius webhooks to facilitate data indexing.

Removes the need for users to manage their own RPCs or Validators.

Ensures real-time and accurate data synchronization with Solana blockchain.

User-Friendly Interface & Experience:

A simple and intuitive interface where users can provide their Postgres credentials and select data indexing options.

Automated backend process to handle data retrieval and indexing without manual intervention.

Clear status updates and logs for data synchronization progress.

Technical Requirements
The more real world use cases covered the better.

Fully functional web-based platform that implements the above mechanics.

Secure integration with Postgres databases for seamless data storage.

Efficient use of Helius webhooks to index blockchain data in real time.

User authentication and database credential management.

Scalable backend to handle multiple users and data indexing requests.

Proper documentation outlining setup, functionality, and deployment instructions.

Basic documentation including function signatures and usage examples.

Demonstrate transaction signing and submission to Solana devnet.

Deliverables
Test cases demonstrating functionality against Solana devnet.

README with setup instructions and dependency information.

Evaluation Criteria
Code quality and organization.

Test coverage and robustness.

Documentation quality.

Performance benchmarks